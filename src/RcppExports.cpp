// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// rcpp_qt
double rcpp_qt(double p, double nu, double delta);
RcppExport SEXP _regtolerance_rcpp_qt(SEXP pSEXP, SEXP nuSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_qt(p, nu, delta));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_qchisq
double rcpp_qchisq(double p, double nu, double delta);
RcppExport SEXP _regtolerance_rcpp_qchisq(SEXP pSEXP, SEXP nuSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_qchisq(p, nu, delta));
    return rcpp_result_gen;
END_RCPP
}
// integral
Rcpp::NumericVector integral(double l, double p, double k, double d);
RcppExport SEXP _regtolerance_integral(SEXP lSEXP, SEXP pSEXP, SEXP kSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type l(lSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(integral(l, p, k, d));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_regtolerance_rcpp_qt", (DL_FUNC) &_regtolerance_rcpp_qt, 3},
    {"_regtolerance_rcpp_qchisq", (DL_FUNC) &_regtolerance_rcpp_qchisq, 3},
    {"_regtolerance_integral", (DL_FUNC) &_regtolerance_integral, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_regtolerance(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
